// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DistSSE.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DistSSE.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DistSSE {
class SetupRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetupRequestMessage> {
} _SetupRequestMessage_default_instance_;
class SearchRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchRequestMessage> {
} _SearchRequestMessage_default_instance_;
class SearchReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchReply> {
} _SearchReply_default_instance_;
class UpdateRequestMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateRequestMessage> {
} _UpdateRequestMessage_default_instance_;
class ExecuteStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExecuteStatus> {
} _ExecuteStatus_default_instance_;

namespace protobuf_DistSSE_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupRequestMessage, setup_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequestMessage, kw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequestMessage, tw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequestMessage, uc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchReply, ind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequestMessage, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRequestMessage, e_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteStatus, status_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SetupRequestMessage)},
  { 5, -1, sizeof(SearchRequestMessage)},
  { 12, -1, sizeof(SearchReply)},
  { 17, -1, sizeof(UpdateRequestMessage)},
  { 23, -1, sizeof(ExecuteStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetupRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteStatus_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DistSSE.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _SetupRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SearchRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SearchReply_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _UpdateRequestMessage_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ExecuteStatus_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::InitDefaults();
  _SetupRequestMessage_default_instance_.DefaultConstruct();
  _SearchRequestMessage_default_instance_.DefaultConstruct();
  _SearchReply_default_instance_.DefaultConstruct();
  _UpdateRequestMessage_default_instance_.DefaultConstruct();
  _ExecuteStatus_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rDistSSE.proto\022\007DistSSE\032\033google/protobu"
      "f/empty.proto\")\n\023SetupRequestMessage\022\022\n\n"
      "setup_size\030\001 \001(\004\":\n\024SearchRequestMessage"
      "\022\n\n\002kw\030\001 \001(\014\022\n\n\002tw\030\002 \001(\014\022\n\n\002uc\030\003 \001(\004\"\032\n\013"
      "SearchReply\022\013\n\003ind\030\001 \001(\014\",\n\024UpdateReques"
      "tMessage\022\t\n\001l\030\001 \001(\014\022\t\n\001e\030\002 \001(\014\"\037\n\rExecut"
      "eStatus\022\016\n\006status\030\001 \001(\0102\227\002\n\003RPC\022\?\n\005setup"
      "\022\034.DistSSE.SetupRequestMessage\032\026.DistSSE"
      ".ExecuteStatus\"\000\022A\n\006search\022\035.DistSSE.Sea"
      "rchRequestMessage\032\024.DistSSE.SearchReply\""
      "\0000\001\022A\n\006update\022\035.DistSSE.UpdateRequestMes"
      "sage\032\026.DistSSE.ExecuteStatus\"\000\022I\n\014batch_"
      "update\022\035.DistSSE.UpdateRequestMessage\032\026."
      "DistSSE.ExecuteStatus\"\000(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 553);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DistSSE.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DistSSE_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupRequestMessage::kSetupSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupRequestMessage::SetupRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DistSSE_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DistSSE.SetupRequestMessage)
}
SetupRequestMessage::SetupRequestMessage(const SetupRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  setup_size_ = from.setup_size_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.SetupRequestMessage)
}

void SetupRequestMessage::SharedCtor() {
  setup_size_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SetupRequestMessage::~SetupRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.SetupRequestMessage)
  SharedDtor();
}

void SetupRequestMessage::SharedDtor() {
}

void SetupRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupRequestMessage::descriptor() {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[0].descriptor;
}

const SetupRequestMessage& SetupRequestMessage::default_instance() {
  protobuf_DistSSE_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetupRequestMessage* SetupRequestMessage::New(::google::protobuf::Arena* arena) const {
  SetupRequestMessage* n = new SetupRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SetupRequestMessage)
  setup_size_ = GOOGLE_ULONGLONG(0);
}

bool SetupRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DistSSE.SetupRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 setup_size = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &setup_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DistSSE.SetupRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DistSSE.SetupRequestMessage)
  return false;
#undef DO_
}

void SetupRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DistSSE.SetupRequestMessage)
  // uint64 setup_size = 1;
  if (this->setup_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->setup_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:DistSSE.SetupRequestMessage)
}

::google::protobuf::uint8* SetupRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SetupRequestMessage)
  // uint64 setup_size = 1;
  if (this->setup_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->setup_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SetupRequestMessage)
  return target;
}

size_t SetupRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SetupRequestMessage)
  size_t total_size = 0;

  // uint64 setup_size = 1;
  if (this->setup_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->setup_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DistSSE.SetupRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DistSSE.SetupRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DistSSE.SetupRequestMessage)
    MergeFrom(*source);
  }
}

void SetupRequestMessage::MergeFrom(const SetupRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SetupRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.setup_size() != 0) {
    set_setup_size(from.setup_size());
  }
}

void SetupRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DistSSE.SetupRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupRequestMessage::CopyFrom(const SetupRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SetupRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupRequestMessage::IsInitialized() const {
  return true;
}

void SetupRequestMessage::Swap(SetupRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupRequestMessage::InternalSwap(SetupRequestMessage* other) {
  std::swap(setup_size_, other->setup_size_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupRequestMessage::GetMetadata() const {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupRequestMessage

// uint64 setup_size = 1;
void SetupRequestMessage::clear_setup_size() {
  setup_size_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SetupRequestMessage::setup_size() const {
  // @@protoc_insertion_point(field_get:DistSSE.SetupRequestMessage.setup_size)
  return setup_size_;
}
void SetupRequestMessage::set_setup_size(::google::protobuf::uint64 value) {
  
  setup_size_ = value;
  // @@protoc_insertion_point(field_set:DistSSE.SetupRequestMessage.setup_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequestMessage::kKwFieldNumber;
const int SearchRequestMessage::kTwFieldNumber;
const int SearchRequestMessage::kUcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequestMessage::SearchRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DistSSE_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DistSSE.SearchRequestMessage)
}
SearchRequestMessage::SearchRequestMessage(const SearchRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kw().size() > 0) {
    kw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kw_);
  }
  tw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tw().size() > 0) {
    tw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tw_);
  }
  uc_ = from.uc_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchRequestMessage)
}

void SearchRequestMessage::SharedCtor() {
  kw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uc_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SearchRequestMessage::~SearchRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchRequestMessage)
  SharedDtor();
}

void SearchRequestMessage::SharedDtor() {
  kw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchRequestMessage::descriptor() {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[1].descriptor;
}

const SearchRequestMessage& SearchRequestMessage::default_instance() {
  protobuf_DistSSE_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchRequestMessage* SearchRequestMessage::New(::google::protobuf::Arena* arena) const {
  SearchRequestMessage* n = new SearchRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchRequestMessage)
  kw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uc_ = GOOGLE_ULONGLONG(0);
}

bool SearchRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DistSSE.SearchRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes kw = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_kw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes tw = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uc = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DistSSE.SearchRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DistSSE.SearchRequestMessage)
  return false;
#undef DO_
}

void SearchRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DistSSE.SearchRequestMessage)
  // bytes kw = 1;
  if (this->kw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->kw(), output);
  }

  // bytes tw = 2;
  if (this->tw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->tw(), output);
  }

  // uint64 uc = 3;
  if (this->uc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uc(), output);
  }

  // @@protoc_insertion_point(serialize_end:DistSSE.SearchRequestMessage)
}

::google::protobuf::uint8* SearchRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchRequestMessage)
  // bytes kw = 1;
  if (this->kw().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->kw(), target);
  }

  // bytes tw = 2;
  if (this->tw().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->tw(), target);
  }

  // uint64 uc = 3;
  if (this->uc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uc(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchRequestMessage)
  return target;
}

size_t SearchRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchRequestMessage)
  size_t total_size = 0;

  // bytes kw = 1;
  if (this->kw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->kw());
  }

  // bytes tw = 2;
  if (this->tw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->tw());
  }

  // uint64 uc = 3;
  if (this->uc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DistSSE.SearchRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DistSSE.SearchRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DistSSE.SearchRequestMessage)
    MergeFrom(*source);
  }
}

void SearchRequestMessage::MergeFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.kw().size() > 0) {

    kw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kw_);
  }
  if (from.tw().size() > 0) {

    tw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tw_);
  }
  if (from.uc() != 0) {
    set_uc(from.uc());
  }
}

void SearchRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DistSSE.SearchRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequestMessage::CopyFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequestMessage::IsInitialized() const {
  return true;
}

void SearchRequestMessage::Swap(SearchRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequestMessage::InternalSwap(SearchRequestMessage* other) {
  kw_.Swap(&other->kw_);
  tw_.Swap(&other->tw_);
  std::swap(uc_, other->uc_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchRequestMessage::GetMetadata() const {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchRequestMessage

// bytes kw = 1;
void SearchRequestMessage::clear_kw() {
  kw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchRequestMessage::kw() const {
  // @@protoc_insertion_point(field_get:DistSSE.SearchRequestMessage.kw)
  return kw_.GetNoArena();
}
void SearchRequestMessage::set_kw(const ::std::string& value) {
  
  kw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DistSSE.SearchRequestMessage.kw)
}
#if LANG_CXX11
void SearchRequestMessage::set_kw(::std::string&& value) {
  
  kw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DistSSE.SearchRequestMessage.kw)
}
#endif
void SearchRequestMessage::set_kw(const char* value) {
  
  kw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DistSSE.SearchRequestMessage.kw)
}
void SearchRequestMessage::set_kw(const void* value, size_t size) {
  
  kw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DistSSE.SearchRequestMessage.kw)
}
::std::string* SearchRequestMessage::mutable_kw() {
  
  // @@protoc_insertion_point(field_mutable:DistSSE.SearchRequestMessage.kw)
  return kw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchRequestMessage::release_kw() {
  // @@protoc_insertion_point(field_release:DistSSE.SearchRequestMessage.kw)
  
  return kw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchRequestMessage::set_allocated_kw(::std::string* kw) {
  if (kw != NULL) {
    
  } else {
    
  }
  kw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kw);
  // @@protoc_insertion_point(field_set_allocated:DistSSE.SearchRequestMessage.kw)
}

// bytes tw = 2;
void SearchRequestMessage::clear_tw() {
  tw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchRequestMessage::tw() const {
  // @@protoc_insertion_point(field_get:DistSSE.SearchRequestMessage.tw)
  return tw_.GetNoArena();
}
void SearchRequestMessage::set_tw(const ::std::string& value) {
  
  tw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DistSSE.SearchRequestMessage.tw)
}
#if LANG_CXX11
void SearchRequestMessage::set_tw(::std::string&& value) {
  
  tw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DistSSE.SearchRequestMessage.tw)
}
#endif
void SearchRequestMessage::set_tw(const char* value) {
  
  tw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DistSSE.SearchRequestMessage.tw)
}
void SearchRequestMessage::set_tw(const void* value, size_t size) {
  
  tw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DistSSE.SearchRequestMessage.tw)
}
::std::string* SearchRequestMessage::mutable_tw() {
  
  // @@protoc_insertion_point(field_mutable:DistSSE.SearchRequestMessage.tw)
  return tw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchRequestMessage::release_tw() {
  // @@protoc_insertion_point(field_release:DistSSE.SearchRequestMessage.tw)
  
  return tw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchRequestMessage::set_allocated_tw(::std::string* tw) {
  if (tw != NULL) {
    
  } else {
    
  }
  tw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tw);
  // @@protoc_insertion_point(field_set_allocated:DistSSE.SearchRequestMessage.tw)
}

// uint64 uc = 3;
void SearchRequestMessage::clear_uc() {
  uc_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SearchRequestMessage::uc() const {
  // @@protoc_insertion_point(field_get:DistSSE.SearchRequestMessage.uc)
  return uc_;
}
void SearchRequestMessage::set_uc(::google::protobuf::uint64 value) {
  
  uc_ = value;
  // @@protoc_insertion_point(field_set:DistSSE.SearchRequestMessage.uc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchReply::kIndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchReply::SearchReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DistSSE_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DistSSE.SearchReply)
}
SearchReply::SearchReply(const SearchReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ind().size() > 0) {
    ind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ind_);
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchReply)
}

void SearchReply::SharedCtor() {
  ind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchReply::~SearchReply() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchReply)
  SharedDtor();
}

void SearchReply::SharedDtor() {
  ind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchReply::descriptor() {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[2].descriptor;
}

const SearchReply& SearchReply::default_instance() {
  protobuf_DistSSE_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchReply* SearchReply::New(::google::protobuf::Arena* arena) const {
  SearchReply* n = new SearchReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchReply)
  ind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SearchReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DistSSE.SearchReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ind = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ind()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DistSSE.SearchReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DistSSE.SearchReply)
  return false;
#undef DO_
}

void SearchReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DistSSE.SearchReply)
  // bytes ind = 1;
  if (this->ind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ind(), output);
  }

  // @@protoc_insertion_point(serialize_end:DistSSE.SearchReply)
}

::google::protobuf::uint8* SearchReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchReply)
  // bytes ind = 1;
  if (this->ind().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ind(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchReply)
  return target;
}

size_t SearchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchReply)
  size_t total_size = 0;

  // bytes ind = 1;
  if (this->ind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ind());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DistSSE.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DistSSE.SearchReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DistSSE.SearchReply)
    MergeFrom(*source);
  }
}

void SearchReply::MergeFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ind().size() > 0) {

    ind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ind_);
  }
}

void SearchReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DistSSE.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchReply::CopyFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply::IsInitialized() const {
  return true;
}

void SearchReply::Swap(SearchReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchReply::InternalSwap(SearchReply* other) {
  ind_.Swap(&other->ind_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchReply::GetMetadata() const {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchReply

// bytes ind = 1;
void SearchReply::clear_ind() {
  ind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchReply::ind() const {
  // @@protoc_insertion_point(field_get:DistSSE.SearchReply.ind)
  return ind_.GetNoArena();
}
void SearchReply::set_ind(const ::std::string& value) {
  
  ind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DistSSE.SearchReply.ind)
}
#if LANG_CXX11
void SearchReply::set_ind(::std::string&& value) {
  
  ind_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DistSSE.SearchReply.ind)
}
#endif
void SearchReply::set_ind(const char* value) {
  
  ind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DistSSE.SearchReply.ind)
}
void SearchReply::set_ind(const void* value, size_t size) {
  
  ind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DistSSE.SearchReply.ind)
}
::std::string* SearchReply::mutable_ind() {
  
  // @@protoc_insertion_point(field_mutable:DistSSE.SearchReply.ind)
  return ind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchReply::release_ind() {
  // @@protoc_insertion_point(field_release:DistSSE.SearchReply.ind)
  
  return ind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchReply::set_allocated_ind(::std::string* ind) {
  if (ind != NULL) {
    
  } else {
    
  }
  ind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ind);
  // @@protoc_insertion_point(field_set_allocated:DistSSE.SearchReply.ind)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRequestMessage::kLFieldNumber;
const int UpdateRequestMessage::kEFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRequestMessage::UpdateRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DistSSE_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DistSSE.UpdateRequestMessage)
}
UpdateRequestMessage::UpdateRequestMessage(const UpdateRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.l().size() > 0) {
    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e().size() > 0) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.UpdateRequestMessage)
}

void UpdateRequestMessage::SharedCtor() {
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateRequestMessage::~UpdateRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.UpdateRequestMessage)
  SharedDtor();
}

void UpdateRequestMessage::SharedDtor() {
  l_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRequestMessage::descriptor() {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[3].descriptor;
}

const UpdateRequestMessage& UpdateRequestMessage::default_instance() {
  protobuf_DistSSE_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateRequestMessage* UpdateRequestMessage::New(::google::protobuf::Arena* arena) const {
  UpdateRequestMessage* n = new UpdateRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.UpdateRequestMessage)
  l_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DistSSE.UpdateRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes l = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes e = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DistSSE.UpdateRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DistSSE.UpdateRequestMessage)
  return false;
#undef DO_
}

void UpdateRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DistSSE.UpdateRequestMessage)
  // bytes l = 1;
  if (this->l().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->l(), output);
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->e(), output);
  }

  // @@protoc_insertion_point(serialize_end:DistSSE.UpdateRequestMessage)
}

::google::protobuf::uint8* UpdateRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.UpdateRequestMessage)
  // bytes l = 1;
  if (this->l().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->l(), target);
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->e(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.UpdateRequestMessage)
  return target;
}

size_t UpdateRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.UpdateRequestMessage)
  size_t total_size = 0;

  // bytes l = 1;
  if (this->l().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->l());
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->e());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DistSSE.UpdateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DistSSE.UpdateRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DistSSE.UpdateRequestMessage)
    MergeFrom(*source);
  }
}

void UpdateRequestMessage::MergeFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.UpdateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.l().size() > 0) {

    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  if (from.e().size() > 0) {

    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
}

void UpdateRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DistSSE.UpdateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRequestMessage::CopyFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.UpdateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequestMessage::IsInitialized() const {
  return true;
}

void UpdateRequestMessage::Swap(UpdateRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRequestMessage::InternalSwap(UpdateRequestMessage* other) {
  l_.Swap(&other->l_);
  e_.Swap(&other->e_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRequestMessage::GetMetadata() const {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRequestMessage

// bytes l = 1;
void UpdateRequestMessage::clear_l() {
  l_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateRequestMessage::l() const {
  // @@protoc_insertion_point(field_get:DistSSE.UpdateRequestMessage.l)
  return l_.GetNoArena();
}
void UpdateRequestMessage::set_l(const ::std::string& value) {
  
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DistSSE.UpdateRequestMessage.l)
}
#if LANG_CXX11
void UpdateRequestMessage::set_l(::std::string&& value) {
  
  l_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DistSSE.UpdateRequestMessage.l)
}
#endif
void UpdateRequestMessage::set_l(const char* value) {
  
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DistSSE.UpdateRequestMessage.l)
}
void UpdateRequestMessage::set_l(const void* value, size_t size) {
  
  l_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DistSSE.UpdateRequestMessage.l)
}
::std::string* UpdateRequestMessage::mutable_l() {
  
  // @@protoc_insertion_point(field_mutable:DistSSE.UpdateRequestMessage.l)
  return l_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateRequestMessage::release_l() {
  // @@protoc_insertion_point(field_release:DistSSE.UpdateRequestMessage.l)
  
  return l_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRequestMessage::set_allocated_l(::std::string* l) {
  if (l != NULL) {
    
  } else {
    
  }
  l_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), l);
  // @@protoc_insertion_point(field_set_allocated:DistSSE.UpdateRequestMessage.l)
}

// bytes e = 2;
void UpdateRequestMessage::clear_e() {
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateRequestMessage::e() const {
  // @@protoc_insertion_point(field_get:DistSSE.UpdateRequestMessage.e)
  return e_.GetNoArena();
}
void UpdateRequestMessage::set_e(const ::std::string& value) {
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DistSSE.UpdateRequestMessage.e)
}
#if LANG_CXX11
void UpdateRequestMessage::set_e(::std::string&& value) {
  
  e_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DistSSE.UpdateRequestMessage.e)
}
#endif
void UpdateRequestMessage::set_e(const char* value) {
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DistSSE.UpdateRequestMessage.e)
}
void UpdateRequestMessage::set_e(const void* value, size_t size) {
  
  e_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DistSSE.UpdateRequestMessage.e)
}
::std::string* UpdateRequestMessage::mutable_e() {
  
  // @@protoc_insertion_point(field_mutable:DistSSE.UpdateRequestMessage.e)
  return e_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateRequestMessage::release_e() {
  // @@protoc_insertion_point(field_release:DistSSE.UpdateRequestMessage.e)
  
  return e_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRequestMessage::set_allocated_e(::std::string* e) {
  if (e != NULL) {
    
  } else {
    
  }
  e_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), e);
  // @@protoc_insertion_point(field_set_allocated:DistSSE.UpdateRequestMessage.e)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteStatus::ExecuteStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DistSSE_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DistSSE.ExecuteStatus)
}
ExecuteStatus::ExecuteStatus(const ExecuteStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.ExecuteStatus)
}

void ExecuteStatus::SharedCtor() {
  status_ = false;
  _cached_size_ = 0;
}

ExecuteStatus::~ExecuteStatus() {
  // @@protoc_insertion_point(destructor:DistSSE.ExecuteStatus)
  SharedDtor();
}

void ExecuteStatus::SharedDtor() {
}

void ExecuteStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteStatus::descriptor() {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[4].descriptor;
}

const ExecuteStatus& ExecuteStatus::default_instance() {
  protobuf_DistSSE_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteStatus* ExecuteStatus::New(::google::protobuf::Arena* arena) const {
  ExecuteStatus* n = new ExecuteStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.ExecuteStatus)
  status_ = false;
}

bool ExecuteStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DistSSE.ExecuteStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DistSSE.ExecuteStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DistSSE.ExecuteStatus)
  return false;
#undef DO_
}

void ExecuteStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DistSSE.ExecuteStatus)
  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:DistSSE.ExecuteStatus)
}

::google::protobuf::uint8* ExecuteStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.ExecuteStatus)
  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.ExecuteStatus)
  return target;
}

size_t ExecuteStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.ExecuteStatus)
  size_t total_size = 0;

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DistSSE.ExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DistSSE.ExecuteStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DistSSE.ExecuteStatus)
    MergeFrom(*source);
  }
}

void ExecuteStatus::MergeFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.ExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ExecuteStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DistSSE.ExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteStatus::CopyFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.ExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteStatus::IsInitialized() const {
  return true;
}

void ExecuteStatus::Swap(ExecuteStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteStatus::InternalSwap(ExecuteStatus* other) {
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteStatus::GetMetadata() const {
  protobuf_DistSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DistSSE_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteStatus

// bool status = 1;
void ExecuteStatus::clear_status() {
  status_ = false;
}
bool ExecuteStatus::status() const {
  // @@protoc_insertion_point(field_get:DistSSE.ExecuteStatus.status)
  return status_;
}
void ExecuteStatus::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DistSSE.ExecuteStatus.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DistSSE

// @@protoc_insertion_point(global_scope)
